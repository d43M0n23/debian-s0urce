#!/bin/bash

###################################################################################
# debian-s0urce --upgrade
###################################################################################
# TODO:
# --upgrade
# ls | awk '{ print $9 }'
# awk '$3 !~ /USA/ '
###################################################################################
# last modify: 23.03.2019
# bug or anything: d43M0n23@3xpl0it.com
###################################################################################
# Bash sTyl3!
clear='\033[0m'		#alle Attribute zurücksetzen
red='\033[31m'          #Schriftfarbe rot
green='\033[32m'        #Schriftfarbe grün
yell='\033[33m'         #Schriftfarbe gelb

#Version
version=v1.0
vdate=23.03.2019

#Variablen
owntag=core
mp4tag=mp4
mkvtag=mkv
mp3tag=mp3
wavtag=wav

#WORKING DIR
TOPDIR=`pwd`
unDone=unDone


## Funktion

# Local Destination
INSTALL_DIR=/usr/share/metapl3x

#Latest release
LATEST_RELEASE=$(curl -L -s -H 'Accept: application/json' https://github.com/d43M0n23/pl3x/releases/latest)
LATEST_VERSION=$(echo $LATEST_RELEASE | sed -e 's/.*"tag_name":"\([^"]*\)".*/\1/')

#-------------
# INSTALL-PART
#-------------

if [ ! -d $INSTALL_DIR ]; then
echo -e "\n${green} + -- --=[This is your first run of the metapl3x ${clear}"
echo -e "${green} + -- --=[This script will install metapl3x under $INSTALL_DIR.${clear}"
echo -e "${green} + -- --=[After install you can use the command 'metapl3x' Server/System wide and remove the downloaded git folder${clear}"

sleep 2
mkdir -p $INSTALL_DIR 2> /dev/null
cp -Rf $PWD/* $INSTALL_DIR 2> /dev/null
rm -f /usr/bin/metapl3x
ln -s $INSTALL_DIR/metapl3x /usr/bin/metapl3x
echo -e "${green} + -- --=[Installation Finish.${clear}"
sleep 2
fi



#UPDATE NEW VERSION

if [ "$LATEST_VERSION" != "$version" ]; then
echo -e "\n${red}Your Version of metapl3x is outdated!${clear}"
echo -e "\n${green}Please use the update function: metapl3x --update!${clear}"
sleep 5
fi


#UPDATE

if [ "$1"  = "--update" ]; then
echo -e "\n${yell}You select the update Feature${clear}"
sleep 2
cd /tmp/
git clone https://github.com/d43M0n23/pl3x.git
cp -Rf pl3x/* $INSTALL_DIR 2> /dev/null
rm -f /usr/bin/metapl3x
ln -s $INSTALL_DIR/metapl3x /usr/bin/metapl3x
echo -e "\n${green}Update finish.Please restart metapl3x.${clear}"
rm -r pl3x
exit
fi


#UNINSTALL

if [ "$1" = "--uninstall" ]; then
echo -e "\n${turk}You have select the uninstall Feature${clear}"
sleep 2
rm -f /usr/bin/metapl3x
cd /usr/share/
rm -r metapl3x
cd
exit
fi


#----------------
# BANNER-FUNCTION
#----------------

sh_banner () {
echo -e "\n"
echo -e "                __                .__  ________          "
echo -e "  _____   _____/  |______  ______ |  | \_____  \___  ___ "
echo -e " /     \_/ __ \   __\__  \ \____ \|  |   _(__  <\  \/  / "
echo -e "|  Y Y  \  ___/|  |  / __ \|  |_> >  |__/       \>    <  "
echo -e "|__|_|  /\___  >__| (____  /   __/|____/______  /__/\_ \ "
echo -e "      \/     \/          \/|__|               \/      \/ "
echo -e "\n"
echo -e "                                           ${yell}Version: ${version}${clear}"
echo -e "                                       ${green}Last Stable: ${LATEST_VERSION}${clear}\n"
echo -e "${yell}Option: ${red}--check, --core, --mp3, --create${clear}"
echo -e "${yell}Option: ${red}--wav, --rarbg, --mp3 --wav, --txt${clear}"
echo -e "${yell}Option: ${red}--merge, --siterip, --sample, --help${clear}"
echo -e "${yell}Option: ${red}--elite${clear}\n"
}

#------------------
## FUNCTION SECTION
#------------------

# CHECK-META
if [ "$1" = "--check" ]; then
sh_banner;
fi

#----------------
# HELP
#----------------
sh_help () {
cat << !
---
-- Author: d43M0n23-3xp10it | c0r3-Team @2017
-- Supported: Linux Kali, Ubuntu, Mint, Parrot OS
---
   metapl3x help function:
   --check	: Prüft die Metadaten der Videodatei
   --core	: Entfernt in den Filenames das wort _core
   --mp3	: Extrahiert aus MP4/MKV eine mp3 datei
   --create	: Erstellt diverse XXX Folder
   --wav	: Extrahiert aus MP4/MKV eine wav datei
   --rarbg	: Bearbeitet nur Datein mit RARBG Tag im Titel
   --mp3 --wav	: Extrahiert automatisch mp3 und wav aus Videofiles
   --txt	: Löscht alle *.txt aus den Video Foldern
   --merge	: Kombiniert 2 Video Dateien
   --siterip	: Verschiebt alle Video Files von Sync zu SiteRip:infinity
   --sample	: Löscht alle Sample Files und Ordner
   --help	: Diese Anzeige
   --elite	: Löscht *txt und Sample,Konvertiert Meta und verschiebt in Mainfolder
!
   exit
}

# move sync to sitetip
if [ "$1" = "--help" ]; then
        sh_banner;
        sh_help;
        exit;
fi


#----------------
# MAIN-PART
#----------------
sh_banner;

#for file in *.mp4 *.mkv (Testen)
# echo ${VALUE%.*}
for file in *;
do
  find "$file" -type f -not -name ".*" | grep .mp4$ | while read file
  do
    pfad=$(readlink -f "$file") # kpl. Pfad
	DirPath=$pfad
	DirPath="$(dirname $DirPath)"
	DirPath="$(basename $DirPath)"
	echo "$DirPath"
	newtag=${DirPath%.XXX*}
	newfile=${file%.*}
	ffmpeg -i $file -c copy -metadata title="$newtag" -metadata comment="$newtag" -y ${newfile}_${owntag}.${mp4tag}
	echo $file korrigiert.
#	cp $file ${file}.bka # Absicherung
	rm $file
  done
  find "$file" -type f -not -name ".*" | grep .mp4$ | while read file
  do
        newfile=${file%_core.*}
        mv $file ${newfile}.${mp4tag}
        echo $file verschoben.
   done
done
